# -*- coding: utf-8 -*-
import datetime

# Form implementation generated from reading ui file 'View_reservation.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox

from Query import Query


class Ui_View_reservation(object):
    def setupUi(self, View_reservation, View_system):
        self.systemView = View_system

        View_reservation.setObjectName("View_reservation")
        View_reservation.resize(708, 544)
        View_reservation.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.centralwidget = QtWidgets.QWidget(View_reservation)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.dateTimeEdit_2 = QtWidgets.QDateTimeEdit(self.centralwidget)
        self.dateTimeEdit_2.setObjectName("dateTimeEdit_2")
        self.gridLayout.addWidget(self.dateTimeEdit_2, 3, 1, 1, 1)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.gridLayout.addWidget(self.lineEdit_2, 5, 1, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 4, 0, 1, 1)
        self.dateTimeEdit = QtWidgets.QDateTimeEdit(self.centralwidget)
        self.dateTimeEdit.setObjectName("dateTimeEdit")
        self.gridLayout.addWidget(self.dateTimeEdit, 2, 1, 1, 1)
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setObjectName("lineEdit")
        self.gridLayout.addWidget(self.lineEdit, 4, 1, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 3, 0, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setObjectName("label_5")
        self.gridLayout.addWidget(self.label_5, 5, 0, 1, 1)
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setObjectName("pushButton")
        self.gridLayout.addWidget(self.pushButton, 0, 0, 1, 1)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 1, 0, 1, 1)
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setObjectName("comboBox")
        self.gridLayout.addWidget(self.comboBox, 1, 1, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 2, 0, 1, 1)
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setObjectName("pushButton_2")
        self.gridLayout.addWidget(self.pushButton_2, 6, 0, 1, 1)
        self.gridLayout.setColumnStretch(0, 1)
        self.gridLayout.setColumnStretch(1, 6)
        self.gridLayout.setColumnStretch(2, 3)
        View_reservation.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(View_reservation)
        self.statusbar.setObjectName("statusbar")
        View_reservation.setStatusBar(self.statusbar)

        self.retranslateUi(View_reservation)
        QtCore.QMetaObject.connectSlotsByName(View_reservation)

        self.pushButton_2.clicked.connect(self.commit)

    def retranslateUi(self, View_reservation):
        _translate = QtCore.QCoreApplication.translate
        View_reservation.setWindowTitle(_translate("View_reservation", "预约表填写"))
        self.label_4.setText(_translate("View_reservation", "预约用途"))
        self.label_3.setText(_translate("View_reservation", "结束时间"))
        self.label_5.setText(_translate("View_reservation", "联系方式"))
        self.pushButton.setText(_translate("View_reservation", "返回"))
        self.label.setText(_translate("View_reservation", "实验室"))
        self.label_2.setText(_translate("View_reservation", "开始时间"))
        self.pushButton_2.setText(_translate("View_reservation", "提交"))

    def setdata(self):
        self.query = Query()
        sql = "SELECT lab_name from laboratory"
        results = self.query.fetch(sql)
        items = []
        for i in results:
            items.append(str(i[0]))
        self.comboBox.clear()
        self.comboBox.addItems(items)

    def commit(self):
        self.query = Query()
        reLab = self.comboBox.currentText()
        startTime = self.dateTimeEdit.dateTime()
        endTime = self.dateTimeEdit_2.dateTime()
        useness = self.lineEdit.text()
        association = self.lineEdit_2.text()
        a0 = endTime.secsTo(startTime)

        if a0 >= 0:
            msg_box = QMessageBox(QMessageBox.Warning, '错误', '结束时间不能早于开始时间')
            msg_box.exec_()  # 执行弹出框
            return

        if useness == '' or association == '':
            msg_box = QMessageBox(QMessageBox.Warning, '错误', '用途和联系方式不能为空')
            msg_box.exec_()  # 执行弹出框
            return

        sql = "SELECT lab_name,re_time_start, re_time_end from reservation,laboratory " \
              "where re_result=true and laboratory.labs_id=reservation.labs_id"
        results = self.query.fetch(sql)

        datetime_start = self.translateQdatetime(startTime)
        datetime_end = self.translateQdatetime(endTime)

        # 判断信息是否正确
        for i in results:
            time1 = i[1]
            time2 = i[2]
            if (time1 <= datetime_start < time2 or time1 < datetime_end <= time2
                or (datetime_start < time1 and datetime_end > time2)) and reLab == str(i[0]):
                msg_box = QMessageBox(QMessageBox.Warning, '错误', '该时间段已经有人预约')
                msg_box.exec_()  # 执行弹出框
                return

        # 提交申请
        sql = "SELECT reservation_id from reservation"
        results2 = self.query.fetch(sql)
        newid = len(results2) + 1
        account = self.systemView.getaccount()
        sql = "SELECT labs_id from laboratory WHERE lab_name = '{}'".format(reLab)
        labs_id = self.query.fetch(sql)[0][0]

        sql = "insert into reservation values({}, '{}', {}, '{}', '{}', '{}', now(), null, '{}', FALSE)" \
            .format(newid, account, labs_id, str(datetime_start), useness, association, str(datetime_end))

        self.query.execute(sql)
        self.systemView.setdata()

    def translateQdatetime(self, qdatetime):
        return datetime.datetime(qdatetime.date().year(), qdatetime.date().month(), qdatetime.date().day(),
                                 qdatetime.time().hour(), qdatetime.time().minute(), qdatetime.time().second())
