# -*- coding: utf-8 -*-
import datetime
import re

# Form implementation generated from reading ui file 'reservationManage.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox, QHeaderView

from Query import Query


class Ui_View_manageReservation(object):
    def setupUi(self, View_manageReservation):
        View_manageReservation.setObjectName("View_manageReservation")
        View_manageReservation.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(View_manageReservation)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setObjectName("widget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.widget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.pushButton = QtWidgets.QPushButton(self.widget)
        self.pushButton.setObjectName("pushButton")
        self.gridLayout_2.addWidget(self.pushButton, 0, 0, 1, 1)
        self.pushButton_2 = QtWidgets.QPushButton(self.widget)
        self.pushButton_2.setObjectName("pushButton_2")
        self.gridLayout_2.addWidget(self.pushButton_2, 0, 1, 1, 1)
        self.widget_2 = QtWidgets.QWidget(self.widget)
        self.widget_2.setObjectName("widget_2")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.widget_2)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.label = QtWidgets.QLabel(self.widget_2)
        self.label.setObjectName("label")
        self.gridLayout_3.addWidget(self.label, 0, 0, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.widget_2)
        self.label_2.setObjectName("label_2")
        self.gridLayout_3.addWidget(self.label_2, 1, 0, 1, 1)
        self.gridLayout_2.addWidget(self.widget_2, 0, 2, 1, 1)
        self.gridLayout_2.setColumnStretch(0, 1)
        self.gridLayout_2.setColumnStretch(1, 2)
        self.gridLayout_2.setColumnStretch(2, 4)
        self.gridLayout.addWidget(self.widget, 0, 0, 1, 1)
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(7)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(6, item)
        self.gridLayout.addWidget(self.tableWidget, 1, 0, 1, 1)
        self.gridLayout.setRowStretch(0, 1)
        self.gridLayout.setRowStretch(1, 20)
        View_manageReservation.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(View_manageReservation)
        self.statusbar.setObjectName("statusbar")
        View_manageReservation.setStatusBar(self.statusbar)

        self.retranslateUi(View_manageReservation)
        QtCore.QMetaObject.connectSlotsByName(View_manageReservation)

        self.tableWidget.horizontalHeader().setSectionResizeMode(QHeaderView.ResizeToContents)
        self.tableWidget.verticalHeader().setSectionResizeMode(QHeaderView.ResizeToContents)
        self.tableWidget.setEditTriggers(QtWidgets.QTableWidget.NoEditTriggers)



    def retranslateUi(self, View_manageReservation):
        _translate = QtCore.QCoreApplication.translate
        View_manageReservation.setWindowTitle(_translate("View_manageReservation", "reservationManage"))
        self.pushButton.setText(_translate("View_manageReservation", "返回"))
        self.pushButton_2.setText(_translate("View_manageReservation", "同意选中的申请"))
        self.label.setText(
            _translate("View_manageReservation", "先在表中选择一行，然后点击同意选中的申请按钮，即可同意申请"))
        self.label_2.setText(_translate("View_manageReservation", "不同意就不处理即可"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("View_manageReservation", "预约号"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("View_manageReservation", "预约老师"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("View_manageReservation", "预约实验室"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("View_manageReservation", "开始时间"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("View_manageReservation", "结束时间"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("View_manageReservation", "预约用途"))
        item = self.tableWidget.horizontalHeaderItem(6)
        item.setText(_translate("View_manageReservation", "联系方式"))

    def setdata(self):
        self.query = Query()
        sql = "Select reservation_id,teacher_name,lab_name,re_time_start,re_time_end,re_purpose,phone_num " \
              "FROM laboratory,teachers,reservation,users WHERE " \
              "reservation.labs_id = laboratory.labs_id and " \
              "reservation.account = users.account and " \
              "users.teacher_id = teachers.teacher_id and " \
              "re_result = false"
        results = self.query.fetch(sql)
        self.tableWidget.setRowCount(len(results))
        row = 0
        for i in results:
            newitem = QtWidgets.QTableWidgetItem(str(i[0]))
            self.tableWidget.setItem(row, 0, newitem)
            newitem = QtWidgets.QTableWidgetItem(str(i[1]))
            self.tableWidget.setItem(row, 1, newitem)
            newitem = QtWidgets.QTableWidgetItem(str(i[2]))
            self.tableWidget.setItem(row, 2, newitem)
            newitem = QtWidgets.QTableWidgetItem(str(i[3]))
            self.tableWidget.setItem(row, 3, newitem)
            newitem = QtWidgets.QTableWidgetItem(str(i[4]))
            self.tableWidget.setItem(row, 4, newitem)
            newitem = QtWidgets.QTableWidgetItem(str(i[5]))
            self.tableWidget.setItem(row, 5, newitem)
            newitem = QtWidgets.QTableWidgetItem(str(i[6]))
            self.tableWidget.setItem(row, 6, newitem)
            row += 1

    def admitReservation(self):
        self.query = Query()
        reLab = self.tableWidget.item(self.tableWidget.currentRow(), 2).text()
        startTime = self.tableWidget.item(self.tableWidget.currentRow(), 3)
        endTime = self.tableWidget.item(self.tableWidget.currentRow(), 4)
        numbers1 = re.findall("\d+", startTime.text())
        numbers2 = re.findall("\d+", endTime.text())

        sql = "SELECT lab_name,re_time_start, re_time_end from reservation,laboratory " \
              "where re_result=true and laboratory.labs_id=reservation.labs_id"
        results = self.query.fetch(sql)

        datetime_start = datetime.datetime(int(numbers1[0]), int(numbers1[1]), int(numbers1[2]), int(numbers1[3]),
                                           int(numbers1[4]), int(numbers1[5]))
        datetime_end = datetime.datetime(int(numbers2[0]), int(numbers2[1]), int(numbers2[2]), int(numbers2[3]),
                                         int(numbers2[4]), int(numbers2[5]))
        # 判断信息是否正确
        for i in results:
            time1 = i[1]
            time2 = i[2]
            if (time1 <= datetime_start < time2 or time1 < datetime_end <= time2
                or (datetime_start <= time1 and datetime_end >= time2)) and reLab == i[0]:
                msg_box = QMessageBox(QMessageBox.Warning, '错误', '该时间段已经有人预约')
                msg_box.exec_()  # 执行弹出框
                return

        currentIndex = self.tableWidget.item(self.tableWidget.currentRow(), 0)
        okbutton = QtWidgets.QPushButton("确定")
        cancelbutton = QtWidgets.QPushButton("取消")

        msg_box = QMessageBox(QMessageBox.Question, "询问",
                              "确定同意该预约请求吗？（预约号为{}）".format(currentIndex.text()))
        msg_box.addButton(okbutton, QMessageBox.AcceptRole)
        msg_box.addButton(cancelbutton, QMessageBox.RejectRole)
        msg_box.exec_()  # 执行弹出框
        if msg_box.clickedButton() == okbutton:
            sql = "update reservation set re_result=True, process_time=now() where reservation_id = '{}'".format(
                currentIndex.text())
            self.query.execute(sql)
            self.setdata()
